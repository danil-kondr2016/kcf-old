Kondratenko's Container File
============================

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY" and "OPTIONAL" in this 
document are to be interpreted as described in RFC 2119.

## Data layout

Archive file consists of variable length records. The order of these
records MAY vary, but the first record MUST be a marker record followed
by an archive header record.

All numeric values are represented as unsigned, little-endian values,
if not stated otherwise.

Each record begins with the following fields:

HeadCRC             2 bytes        CRC of total record or record part
HeadType            1 byte         Record type
HeadFlags           1 byte         Record flags
HeadSize            2 bytes        Record size
AddedSize           4/8 bytes      Optional field - added data size
AddedSizeCRC32      4 bytes        Optional field - added data CRC32

Field `AddedSize` present only if `(HeadFlags & 0x80) != 0` and has
size of 4 bytes. If `(HeadFlags & 0xC0) == 0xC0`, this field has
size of 8 bytes.

Total record size is `HeadSize` if `(HeadFlags & 0x80) == 0` and
`HeadSize+AddedSize` if the field `AddedSize` is present. `HeadSize`
includes header fields size and equals at least:

- 6  if `(HeadFlags & 0x80) == 0`;
- 10 if `(HeadFlags & 0xC0) == 0x80`;
- 14 if `(HeadFlags & 0xC0) == 0xC0`.

Field `AddedSizeCRC32` present only if `(HeadFlags & 0x20) != 0` and has
size of 4 bytes. If this field is present, `HeadSize` equals at least:

- 10 if `(HeadFlags & 0x80) == 0 && (HeadFlags & 0x20) != 0`;
- 14 if `(HeadFlags & 0xC0) == 0x80 && (HeadFlags & 0x20) != 0`;
- 18 if `(HeadFlags & 0xC0) == 0xC0 && (HeadFlags & 0x20) != 0`.

## Record format

### Marker record

HeadCRC             Always 0x434B
2 bytes

HeadType            Type:  0x21 ('!')
1 bytes

HeadFlags           Always 0x1A
1 byte

HeadSize            Size = 0x0006
2 bytes

The marker record is actually considered as a fixed byte sequence:

    4B 43 21 1A 06 00

or

    "KC!\x1A\6\0"

For this type of record any flags MUST be ignored since this record
begins KCF data stream. `HeadCRC` MUST NOT be validated.
    
### Archive header

HeadCRC             CRC of fields from HeadType to FormatVersion
2 bytes

HeadType            Type:  0x41 ('A')
1 byte

HeadFlags           Always 0x00
1 byte

HeadSize            Size = 0x0008
2 bytes

FormatVersion       Always 0x0001
2 bytes

### File local header

HeadCRC             CRC of all fields from HeadType to end of FileName
2 bytes

HeadType            Type:  0x46 ('F')
1 byte

HeadFlags           Bit flags:
1 byte
                    0x01: packed file data MUST be continuted in next
                    record

HeadSize            File header full size including file name
2 bytes

PackedSize          Optional - compressed data or data fragment size
4/8 bytes
                    If 0x01 head flag is set, total compressed data size
                    is the sum of `PackedSize` value of this record and
                    `PackedSize` values of subsequent data fragment record
                    chunks.

PackedDataCRC32     Optional - compressed data fragment CRC32
4 bytes

FileFlags           Bit flags:
1 byte
                    0x01: has POSIX-style timestamp

                    0x02: has FileCRC32 field
                    
                    0x04: field `UnpackedSize` is present 
                          and 4 bytes long
                            
                    0x08: if 0x04 is set, `UnpackedSize`
                          is 8 bytes long

FileType            Type of file
1 byte
                    0x46 ('F') - regular file

                    0x64 ('d') - directory

UnpackedSize        Optional - uncompressed file size
4/8 bytes
                    If this field is absent, file is considered empty

FileCRC32           Optional - CRC32 of file
4 bytes

CompressionInfo     Compression info
4 bytes         
                    Least significant 8 bits are reserved for 
                    compression algorithm (`FileType & 0x000000FF`)
                    
                    Remaining bits are dependent on algorithm itself
                    
                    0x00000000 - file is stored

TimeStamp           Timestamp of file in POSIX format, signed
8 bytes
                    Optional, present if file flag 0x01 is set

FileNameSize        Length of file name
2 bytes

FileName            File name encoded in UTF-8
FileNameSize bytes 

### Compressed data fragment record

HeadCRC             CRC of all fields from HeadType to PackedSize
2 bytes

HeadType            Type:  0x44 ('D')
1 bytes

HeadFlags           Bit flags:
1 bytes
                    0x01: packed file data MUST be continuted in next
                    record
                    
                    If cleared, this record is last record of
                    compressed data.

                    0x20: has PackedDataCRC32 field
                    
                    0x80: has PackedSize field which is 4 bytes
                    long
                    
                    0x40: if 0x80 is set, PackedSize field
                    is 8 bytes long
                    
                    0x80 flag is always set for this type of block.

HeadSize            Size = 10, 14, 18
2 bytes

PackedSize          Compressed data fragment size
4/8 bytes

PackedDataCRC32     Optional - packed data fragment CRC32
4 bytes

## Used CRC32

KCF uses CRC32C (Castagnoli CRC) algorithm which seems to be better than
traditional CRC32 used in zlib, gzip and other formats.

CRC16 is low-significant bytes of CRC32C.
